package de.tuhh.diss.harborstorage;

import de.tuhh.diss.harborstorage.sim.StorageException;
import de.tuhh.diss.io.SimpleIO;

public class HarborStorageApp {
	
	private static HarborStorageManagement HSM;
	//private Packet[] packetArray; commented out
	
	private static void showAvaliblePackets() {			//This method creates an array of the stored packets and prints the information, 
														//but only if there are items in it
		Packet[] packetArray;
		packetArray = HSM.getPackets();
		if(packetArray.length != 0){
			SimpleIO.print("\nAvailable packets:\n");
			int num = 1;
			for (int i = 0; i < packetArray.length; i++){
			SimpleIO.print(num + ": Packet '" + packetArray[i].getDescription() + "' Size: " + packetArray[i].getWidth() + "x" + packetArray[i].getHeight()
				+ "x"  + packetArray[i].getDepth() + " Weight: " + packetArray[i].getWeight() + "\n");
			num++;
			
			}
		}
	}
	
	private static int realityCheck(){					//This method makes sure the numbers entered are greater than 0
		boolean Real = false;
		int num = SimpleIO.readInt();
		while (Real == false){
			if (num > 0)
				Real = true;
			else {
				SimpleIO.print("I'm sorry, the number you entered is not realistic.\n");
				SimpleIO.print("Please enter a number greater than 0.\n");
				num = SimpleIO.readInt();
			}
		}
		return num;
	}
	
	
	
	public static void main (String[] args)  {
	HSM = new HarborStorageManagement();				// This way HSM actually gets created, and program will run
	
	int selection;
		do{
		showAvaliblePackets();							//Calls the showAvalibleMethod so it happens before the Main Menu every time
		SimpleIO.print("\n\n*** Main Menu ***\n");
		SimpleIO.print("1) Store a Packet\n");
		SimpleIO.print("2) Retrieve a packet\n");
		SimpleIO.print("3) Quit\n");
		selection=SimpleIO.readInt();
		switch (selection){
		case 1://case 1 calls the information and methods needed to store a packet
			SimpleIO.print("Please give a description\n");
			String description = SimpleIO.readString();
			
			SimpleIO.print("Please give the width of the packet\n");
			int wi = realityCheck();
			
			SimpleIO.print("Please give the height of the packet\n");
			int hi = realityCheck();
			
			SimpleIO.print("Please give the depth of the packet\n");
			int de = realityCheck();
			
			SimpleIO.print("Please give the weight of the packet\n");
			int we = realityCheck();
			
			try {
				HSM.storePacket(wi, hi, de, description, we);
			} catch (StorageException e) {
				e.printStackTrace();
			}
			
			break;
			
		case 2: //case 2 calls the needed methods to retrive a packet
			SimpleIO.print("Please give a description\n");
			String description1 = SimpleIO.readString();
			try {
				HSM.retrievePacket(description1);
			} catch (StorageException e) {
				e.printStackTrace();
			}
			
			break;
			
		case 3:
			SimpleIO.print("Goodbye\n");
			
			break;
		
		}
		
		}while(selection != 3);
		HSM.shutdown();					// shutdown method is called when 3 is selected
	}
}
